{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\src\\\\Question.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport AddQuestion from \"./AddQuestion\";\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question(props) {\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Question).call(this, props));\n    _this.state = {\n      questions: []\n    };\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var response, questionsArray;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:8080/questions2\");\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                questionsArray = _context.sent;\n                this.setState({\n                  currentQuestion: questionsArray.find(function (question) {\n                    return question._id === _this2.props.match.params.id;\n                  })\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$currentQu = this.state.currentQuestion,\n          title = _this$state$currentQu.title,\n          description = _this$state$currentQu.description; //  this.state.questions.forEach((elm) => {\n      //     list.push(<li key={elm.id}>\n      //         <Link key={elm.id} to={`/questions/with/${elm.topic}`}>{elm.topic}</Link>\n      //     </li>)\n      // });\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, description));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nexport default Question;","map":{"version":3,"sources":["C:\\Users\\mrazo\\OneDrive\\Plocha\\School\\Frameworks\\MandatoryTest\\src\\Question.js"],"names":["React","Component","Link","AddQuestion","Question","props","state","questions","fetch","response","json","questionsArray","setState","currentQuestion","find","question","_id","match","params","id","title","description"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAb;AAFe;AAGlB;;;;;;;;;;;;;;;;uBAG0BC,KAAK,oC;;;AAAtBC,gBAAAA,Q;;uBAKuBA,QAAQ,CAACC,IAAT,E;;;AAAvBC,gBAAAA,c;AACN,qBAAKC,QAAL,CAAc;AAAEC,kBAAAA,eAAe,EAAEF,cAAc,CAACG,IAAf,CAAoB,UAAAC,QAAQ;AAAA,2BAAIA,QAAQ,CAACC,GAAT,KAAiB,MAAI,CAACX,KAAL,CAAWY,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AAAA,mBAA5B;AAAnB,iBAAd;;;;;;;;;;;;;;;;;;6BAEK;AAAA,kCACwB,KAAKb,KAAL,CAAWO,eADnC;AAAA,UACEO,KADF,yBACEA,KADF;AAAA,UACSC,WADT,yBACSA,WADT,EAEL;AACA;AACA;AACA;AACA;;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,KAAL,CADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,WAAJ,CAHJ,CADJ;AAYH;;;;EAnCkBpB,S;;AAsCvB,eAAeG,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport AddQuestion from \"./AddQuestion\";\r\n\r\nclass Question extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {questions:[]}\r\n    }\r\n    async componentWillMount() {\r\n        //await data.\r\n        const response = await fetch(\r\n            `http://localhost:8080/questions2`\r\n        );\r\n\r\n        //assign to const json and set state when we receive data\r\n        const questionsArray = await response.json();\r\n        this.setState({ currentQuestion: questionsArray.find(question => question._id === this.props.match.params.id) });\r\n    }\r\n    render() {\r\n        const {title, description} = this.state.currentQuestion\r\n        //  this.state.questions.forEach((elm) => {\r\n        //     list.push(<li key={elm.id}>\r\n        //         <Link key={elm.id} to={`/questions/with/${elm.topic}`}>{elm.topic}</Link>\r\n        //     </li>)\r\n        // });\r\n\r\n        return (\r\n            <div>\r\n                <h3>{title}</h3>\r\n\r\n                <p>{description}</p>\r\n\r\n                {/*Topics:*/}\r\n                    {/*<ul>*/}\r\n                        {/*{list}*/}\r\n                    {/*</ul>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}