{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport Switch from \"react-switch\";\nimport './index.css';\nimport Question from \"./Question\";\nimport QuestionList from \"./QuestionList\";\nimport AddQuestion from \"./AddQuestion\";\nimport NotFound from \"./NotFound\";\nimport axios from 'axios';\n\nfunction axiosTest() {\n  return axios.get('http://localhost:8080/questions2').then(function (response) {\n    return response.data;\n  });\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.gotData = false;\n    _this.state = {\n      questions: _this.getData() // this.handleChange = this.handleChange.bind(this);\n\n    };\n    _this.API_URL = window.location.href;\n    return _this;\n  } // handleChange() {\n  //     console.log(\"test\");\n  // }\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"'http://localhost:8080/questions2'\");\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context.sent;\n                this.setState({\n                  questions: json\n                }); // axiosTest().then(data => {\n                //     this.setState({\n                //         questions: data\n                //     });\n                //     this.gotData = true;\n                // });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                axiosTest().then(function (data) {\n                  _this2.setState({\n                    questions: data\n                  });\n\n                  _this2.gotData = true;\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"storage\",\n    value: function storage() {\n      var data = this.state.data;\n      localStorage.setItem(\"data\", JSON.stringify(data));\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this3 = this;\n\n      console.log(this);\n      axiosTest().then(function (data) {\n        _this3.setState({\n          questions: data\n        });\n\n        _this3.gotData = true;\n      });\n      this.storage();\n    }\n  }, {\n    key: \"getQuestionFromId\",\n    value: function getQuestionFromId(id) {\n      return this.state.questions.find(function (elm) {\n        return elm.id === Number(id);\n      });\n    }\n  }, {\n    key: \"filterByTopic\",\n    value: function filterByTopic(topic) {\n      return this.state.questions.filter(function (elm) {\n        return elm.topic.includes(topic);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var questions = this.state.questions;\n      console.log(this.state.questions);\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"StackOverflow\"), React.createElement(Switch, {\n        onChange: this.handleChange,\n        checked: this.state.checked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: '/',\n        render: function render(props) {\n          return React.createElement(QuestionList, Object.assign({\n            gotData: true\n          }, props, {\n            questions: questions,\n            header: 'Questions Asked',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: '/questions/:id',\n        render: function render(props) {\n          return React.createElement(Question, Object.assign({}, props, {\n            questions: _this4.getQuestionFromId(props.match.params.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: '/questions/with/:topic',\n        render: function render(props) {\n          return React.createElement(QuestionList, Object.assign({}, props, {\n            questions: _this4.filterByTopic(props.match.params.topic),\n            header: \"Questions that consist \".concat(props.match.params.topic),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\mrazo\\OneDrive\\Plocha\\School\\Frameworks\\MandatoryTest\\src\\App.js"],"names":["React","Component","Route","Link","BrowserRouter","Router","Switch","Question","QuestionList","AddQuestion","NotFound","axios","axiosTest","get","then","response","data","App","props","gotData","state","questions","getData","API_URL","window","location","href","fetch","json","setState","localStorage","setItem","JSON","stringify","console","log","storage","id","find","elm","Number","topic","filter","includes","handleChange","checked","getQuestionFromId","match","params","filterByTopic"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport Switch from \"react-switch\";\nimport './index.css';\nimport Question from \"./Question\";\nimport QuestionList from \"./QuestionList\";\nimport AddQuestion from \"./AddQuestion\";\nimport NotFound from \"./NotFound\";\nimport axios from 'axios';\nfunction axiosTest() {\n    return axios.get('http://localhost:8080/questions2').then(response => {\n\n        return response.data\n    })\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.gotData = false;\n        this.state = { questions: this.getData()}\n        // this.handleChange = this.handleChange.bind(this);\n        this.API_URL=window.location.href;\n    }\n    // handleChange() {\n    //     console.log(\"test\");\n    // }\n    async componentDidMount() {\n        const response = await fetch(\n            `'http://localhost:8080/questions2'`\n        );\n        const json = await response.json();\n        this.setState({questions: json});\n        // axiosTest().then(data => {\n        //     this.setState({\n        //         questions: data\n        //     });\n        //     this.gotData = true;\n        // });\n    }\n    async componentWillMount() {\n\n        axiosTest().then(data => {\n            this.setState({\n                questions: data\n            });\n            this.gotData = true;\n        });\n    }\n    storage(){\n        let data = this.state.data;\n        localStorage.setItem(\"data\", JSON.stringify(data))\n    };\n        getData(){\n        console.log(this);\n            axiosTest().then(data => {\n                this.setState({\n                    questions: data\n                });\n                this.gotData = true;\n            });\n        this.storage()\n    }\n\n    getQuestionFromId(id) {\n        return this.state.questions.find((elm) => elm.id === Number(id));\n    }\n\n    filterByTopic(topic) {\n        return this.state.questions.filter((elm) => elm.topic.includes(topic))\n    }\n\n    render() {\n        var questions = this.state.questions;\n        console.log(this.state.questions);\n        return (\n            <Router>\n                <div className=\"container\">\n                    <h1>StackOverflow</h1>\n\n                    <Switch onChange={this.handleChange} checked={this.state.checked} >\n                        <Route exact path={'/'}\n                               render={(props) =>\n                                   <QuestionList gotData={true} {...props}\n                                                 questions={questions}\n                                                 header={'Questions Asked'}/>\n                               }\n                        />\n\n                        <Route exact path={'/questions/:id'}\n                               render={(props) => <Question {...props}\n                                                            questions={this.getQuestionFromId(props.match.params.id)}/>}\n                        />\n\n                        <Route exact path={'/questions/with/:topic'}\n                               render={(props) =>\n                                   <QuestionList {...props}\n                                                 questions={this.filterByTopic(props.match.params.topic)}\n                                                 header={`Questions that consist ${props.match.params.topic}`}/>}\n                        />\n\n                        <Route component={NotFound} />\n                    </Switch>\n\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}