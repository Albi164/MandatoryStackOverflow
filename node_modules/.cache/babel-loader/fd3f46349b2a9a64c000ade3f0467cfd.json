{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\mrazo\\\\OneDrive\\\\Plocha\\\\School\\\\Frameworks\\\\MandatoryTest\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport Switch from \"react-switch\";\nimport './App.css';\nimport Question from \"./Question\";\nimport QuestionList from \"./QuestionList\";\nimport AddQuestion from \"./AddQuestion\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      questions: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      console.log(\"Getting data\");\n      fetch(\"\".concat(this.API_URL, \"/questions\")).then(function (response) {\n        console.log(response);\n        response.json();\n      }).then(function (json) {\n        _this2.setState({\n          data: json\n        });\n      });\n    }\n  }, {\n    key: \"addQuestion\",\n    value: function addQuestion(text) {\n      var newQuestion = {\n        id: Math.floor(Math.random() * Math.floor(1000000)),\n        task: text,\n        done: false\n      };\n      this.setState({\n        questions: [].concat(_toConsumableArray(this.state.questions), [newQuestion])\n      });\n    }\n  }, {\n    key: \"getQuestionFromId\",\n    value: function getQuestionFromId(id) {\n      return this.state.questions.find(function (elm) {\n        return elm.id === Number(id);\n      });\n    }\n  }, {\n    key: \"filterByTopic\",\n    value: function filterByTopic(topic) {\n      return this.state.questions.filter(function (elm) {\n        return elm.topic.includes(topic);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"StackOverflow\"), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: '/',\n        render: function render(props) {\n          return React.createElement(QuestionList, Object.assign({}, props, {\n            questions: _this3.state.questions,\n            header: 'Questions Asked',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: '/questions/:id',\n        render: function render(props) {\n          return React.createElement(Question, Object.assign({}, props, {\n            questions: _this3.getQuestionFromId(props.match.params.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: '/questions/with/:topic',\n        render: function render(props) {\n          return React.createElement(QuestionList, Object.assign({}, props, {\n            questions: _this3.filterByTopic(props.match.params.topic),\n            header: \"Questions that consist \".concat(props.match.params.topic),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\mrazo\\OneDrive\\Plocha\\School\\Frameworks\\MandatoryTest\\src\\App.js"],"names":["React","Component","ReactDOM","Route","Link","BrowserRouter","Router","Switch","Question","QuestionList","AddQuestion","App","props","state","questions","getData","console","log","fetch","API_URL","then","response","json","setState","data","text","newQuestion","id","Math","floor","random","task","done","find","elm","Number","topic","filter","includes","getQuestionFromId","match","params","filterByTopic","NotFound"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport Switch from \"react-switch\";\nimport './App.css';\nimport Question from \"./Question\";\nimport QuestionList from \"./QuestionList\";\nimport AddQuestion from \"./AddQuestion\";\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n    getData(){\n        console.log(\"Getting data\");\n        fetch(`${this.API_URL}/questions`)\n            .then(response =>{\n                console.log(response)\n                response.json()})\n            .then(json =>{\n                this.setState({data: json})\n            })\n    }\n\n    addQuestion(text) {\n        let newQuestion = {\n            id: Math.floor(Math.random() * Math.floor(1000000)),\n            task: text,\n            done: false\n        };\n        this.setState({\n            questions: [...this.state.questions, newQuestion]\n        });\n    }\n    getQuestionFromId(id) {\n        return this.state.questions.find((elm) => elm.id === Number(id));\n    }\n\n    filterByTopic(topic) {\n        return this.state.questions.filter((elm) => elm.topic.includes(topic))\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"container\">\n                    <h1>StackOverflow</h1>\n\n                    <Switch>\n                        <Route exact path={'/'}\n                               render={(props) =>\n                                   <QuestionList {...props}\n                                                 questions={this.state.questions}\n                                                 header={'Questions Asked'}/>\n                               }\n                        />\n\n                        <Route exact path={'/questions/:id'}\n                               render={(props) => <Question {...props}\n                                                            questions={this.getQuestionFromId(props.match.params.id)}/>}\n                        />\n\n                        <Route exact path={'/questions/with/:topic'}\n                               render={(props) =>\n                                   <QuestionList {...props}\n                                                 questions={this.filterByTopic(props.match.params.topic)}\n                                                 header={`Questions that consist ${props.match.params.topic}`}/>}\n                        />\n\n                        <Route component={NotFound} />\n                    </Switch>\n\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}